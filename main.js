(()=>{"use strict";const e=async e=>{const t=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${e}&appid=a0c9839361f301aa4ff8bb089dde2d79`);return 200===t.status?await t.json():Promise.reject(t)},t=(()=>{const e=e=>e.main.temp;return{getTemperature:e,getTemperatureFahrenheit:t=>{const r=9*(e(t)-273.15)/5+32;return Math.round(100*r)/100},getTemperatureCelsius:t=>{const r=e(t)-273.15;return Math.round(100*r)/100},getWeatherMain:e=>e.weather[0].main,getWeatherDescription:e=>e.weather[0].description,getWeatherIconCode:e=>e.weather[0].icon}})(),r=e=>{const r=t.getWeatherIconCode(e);document.querySelector(".weather-icon").src=`http://openweathermap.org/img/wn/${r}.png`},n=e=>{const r=t.getWeatherMain(e);document.querySelector(".weather-main").textContent=r};(()=>{const t=async()=>{const t=document.querySelector("#city").value;if(""!==t)try{const a=await e(t);console.log(a),r(a),n(a)}catch(e){console.error(Error(e.statusText))}};return{addUserInputListener:()=>{const e=document.querySelector(".search-button"),r=document.querySelector("#city");e.addEventListener("click",t),r.addEventListener("keydown",(e=>{"Enter"===e.key&&t()}))}}})().addUserInputListener()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,