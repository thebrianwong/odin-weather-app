(()=>{"use strict";const e=async e=>{const t=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${e}&appid=a0c9839361f301aa4ff8bb089dde2d79`);return await t.json()},t=(()=>{const e=e=>e.main.temp;return{getTemperature:e,getTemperatureFahrenheit:t=>{const o=9*(e(t)-273.15)/5+32;return Math.round(100*o)/100},getTemperatureCelsius:t=>{const o=e(t)-273.15;return Math.round(100*o)/100},getWeatherMain:e=>e.weather[0].main,getWeatherDescription:e=>e.weather[0].description,getWeatherIconCode:e=>e.weather[0].icon}})();e("San Francisco").then((e=>{console.log(e),console.log(e.weather[0].icon);const o=t.getWeatherIconCode(e),r=document.createElement("img");r.src=`http://openweathermap.org/img/wn/${o}.png`,document.querySelector("div").appendChild(r),console.log(t.getWeatherMain(e)),console.log(t.getWeatherDescription(e)),console.log(t.getTemperature(e)),console.log(t.getTemperatureFahrenheit(e)),console.log(t.getTemperatureCelsius(e))})).then((e=>{console.log(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQUEsTUFBTUEsRUFFbUJDLE1BQU9DLElBQzVCLE1BQU1DLFFBQWlCQyxNQUNyQixxREFBcURGLDRDQUd2RCxhQUQyQkMsRUFBU0UsTUFDakIsRUNQakJDLEVBQWEsTUFDakIsTUFBTUMsRUFBa0JDLEdBQVNBLEVBQUtDLEtBQUtDLEtBYzNDLE1BQU8sQ0FDTEgsaUJBQ0FJLHlCQWZnQ0gsSUFDaEMsTUFDTUksRUFBa0MsR0FEekJMLEVBQWVDLEdBQ0EsUUFBZSxFQUFJLEdBQ2pELE9BQU9LLEtBQUtDLE1BQW1CLElBQWJGLEdBQW9CLEdBQUcsRUFhekNHLHNCQVg2QlAsSUFDN0IsTUFDTVEsRUFEU1QsRUFBZUMsR0FDTCxPQUN6QixPQUFPSyxLQUFLQyxNQUFnQixJQUFWRSxHQUFpQixHQUFHLEVBU3RDQyxlQVBzQlQsR0FBU0EsRUFBS1UsUUFBUSxHQUFHVCxLQVEvQ1Usc0JBUDZCWCxHQUFTQSxFQUFLVSxRQUFRLEdBQUdFLFlBUXREQyxtQkFQMEJiLEdBQVNBLEVBQUtVLFFBQVEsR0FBR0ksS0FTdEQsRUF2QmtCLEdDR25CdEIsRUFBMEIsaUJBQ3ZCdUIsTUFBTXBCLElBQ0xxQixRQUFRQyxJQUFJdEIsR0FDWnFCLFFBQVFDLElBQUl0QixFQUFTZSxRQUFRLEdBQUdJLE1BQ2hDLE1BQU1BLEVBQU9oQixFQUFXZSxtQkFBbUJsQixHQUNyQ3VCLEVBQU1DLFNBQVNDLGNBQWMsT0FDbkNGLEVBQUlHLElBQU0sb0NBQW9DUCxRQUNsQ0ssU0FBU0csY0FBYyxPQUMvQkMsWUFBWUwsR0FDaEJGLFFBQVFDLElBQUluQixFQUFXVyxlQUFlZCxJQUN0Q3FCLFFBQVFDLElBQUluQixFQUFXYSxzQkFBc0JoQixJQUM3Q3FCLFFBQVFDLElBQUluQixFQUFXQyxlQUFlSixJQUN0Q3FCLFFBQVFDLElBQUluQixFQUFXSyx5QkFBeUJSLElBQ2hEcUIsUUFBUUMsSUFBSW5CLEVBQVdTLHNCQUFzQlosR0FBVSxJQUV4RG9CLE1BQU1wQixJQUNMcUIsUUFBUUMsSUFBSXRCLEVBQVMsRyIsInNvdXJjZXMiOlsid2VicGFjazovL29kaW4td2VhdGhlci1hcHAvLi9zcmMvQVBJX3JlcXVlc3RfbW9kdWxlLmpzIiwid2VicGFjazovL29kaW4td2VhdGhlci1hcHAvLi9zcmMvZmlsdGVyX2RhdGFfbW9kdWxlLmpzIiwid2VicGFjazovL29kaW4td2VhdGhlci1hcHAvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQVBJUmVxdWVzdCA9ICgoKSA9PiB7XG4gIGNvbnN0IEFQSUtFWSA9IFwiYTBjOTgzOTM2MWYzMDFhYTRmZjhiYjA4OWRkZTJkNzlcIjtcbiAgY29uc3QgZ2V0Q2l0eVdlYXRoZXIgPSBhc3luYyAoY2l0eSkgPT4ge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXG4gICAgICBgaHR0cHM6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41L3dlYXRoZXI/cT0ke2NpdHl9JmFwcGlkPSR7QVBJS0VZfWBcbiAgICApO1xuICAgIGNvbnN0IHBhcnNlZE9iamVjdCA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICByZXR1cm4gcGFyc2VkT2JqZWN0O1xuICB9O1xuICByZXR1cm4geyBnZXRDaXR5V2VhdGhlciB9O1xufSkoKTtcblxuZXhwb3J0IHsgQVBJUmVxdWVzdCB9O1xuIiwiY29uc3QgZmlsdGVyRGF0YSA9ICgoKSA9PiB7XG4gIGNvbnN0IGdldFRlbXBlcmF0dXJlID0gKGRhdGEpID0+IGRhdGEubWFpbi50ZW1wO1xuICBjb25zdCBnZXRUZW1wZXJhdHVyZUZhaHJlbmhlaXQgPSAoZGF0YSkgPT4ge1xuICAgIGNvbnN0IGtlbHZpbiA9IGdldFRlbXBlcmF0dXJlKGRhdGEpO1xuICAgIGNvbnN0IGZhaHJlbmhlaXQgPSAoKGtlbHZpbiAtIDI3My4xNSkgKiA5KSAvIDUgKyAzMjtcbiAgICByZXR1cm4gTWF0aC5yb3VuZChmYWhyZW5oZWl0ICogMTAwKSAvIDEwMDtcbiAgfTtcbiAgY29uc3QgZ2V0VGVtcGVyYXR1cmVDZWxzaXVzID0gKGRhdGEpID0+IHtcbiAgICBjb25zdCBrZWx2aW4gPSBnZXRUZW1wZXJhdHVyZShkYXRhKTtcbiAgICBjb25zdCBjZWxzaXVzID0ga2VsdmluIC0gMjczLjE1O1xuICAgIHJldHVybiBNYXRoLnJvdW5kKGNlbHNpdXMgKiAxMDApIC8gMTAwO1xuICB9O1xuICBjb25zdCBnZXRXZWF0aGVyTWFpbiA9IChkYXRhKSA9PiBkYXRhLndlYXRoZXJbMF0ubWFpbjtcbiAgY29uc3QgZ2V0V2VhdGhlckRlc2NyaXB0aW9uID0gKGRhdGEpID0+IGRhdGEud2VhdGhlclswXS5kZXNjcmlwdGlvbjtcbiAgY29uc3QgZ2V0V2VhdGhlckljb25Db2RlID0gKGRhdGEpID0+IGRhdGEud2VhdGhlclswXS5pY29uO1xuICByZXR1cm4ge1xuICAgIGdldFRlbXBlcmF0dXJlLFxuICAgIGdldFRlbXBlcmF0dXJlRmFocmVuaGVpdCxcbiAgICBnZXRUZW1wZXJhdHVyZUNlbHNpdXMsXG4gICAgZ2V0V2VhdGhlck1haW4sXG4gICAgZ2V0V2VhdGhlckRlc2NyaXB0aW9uLFxuICAgIGdldFdlYXRoZXJJY29uQ29kZSxcbiAgfTtcbn0pKCk7XG5cbmV4cG9ydCB7IGZpbHRlckRhdGEgfTtcbiIsImltcG9ydCB7IEFQSVJlcXVlc3QgfSBmcm9tIFwiLi9BUElfcmVxdWVzdF9tb2R1bGVcIjtcbmltcG9ydCB7IGZpbHRlckRhdGEgfSBmcm9tIFwiLi9maWx0ZXJfZGF0YV9tb2R1bGVcIjtcblxuQVBJUmVxdWVzdC5nZXRDaXR5V2VhdGhlcihcIlNhbiBGcmFuY2lzY29cIilcbiAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG4gICAgY29uc29sZS5sb2cocmVzcG9uc2UpO1xuICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLndlYXRoZXJbMF0uaWNvbik7XG4gICAgY29uc3QgaWNvbiA9IGZpbHRlckRhdGEuZ2V0V2VhdGhlckljb25Db2RlKHJlc3BvbnNlKTtcbiAgICBjb25zdCBpbWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xuICAgIGltZy5zcmMgPSBgaHR0cDovL29wZW53ZWF0aGVybWFwLm9yZy9pbWcvd24vJHtpY29ufS5wbmdgO1xuICAgIGNvbnN0IGRpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJkaXZcIik7XG4gICAgZGl2LmFwcGVuZENoaWxkKGltZyk7XG4gICAgY29uc29sZS5sb2coZmlsdGVyRGF0YS5nZXRXZWF0aGVyTWFpbihyZXNwb25zZSkpO1xuICAgIGNvbnNvbGUubG9nKGZpbHRlckRhdGEuZ2V0V2VhdGhlckRlc2NyaXB0aW9uKHJlc3BvbnNlKSk7XG4gICAgY29uc29sZS5sb2coZmlsdGVyRGF0YS5nZXRUZW1wZXJhdHVyZShyZXNwb25zZSkpO1xuICAgIGNvbnNvbGUubG9nKGZpbHRlckRhdGEuZ2V0VGVtcGVyYXR1cmVGYWhyZW5oZWl0KHJlc3BvbnNlKSk7XG4gICAgY29uc29sZS5sb2coZmlsdGVyRGF0YS5nZXRUZW1wZXJhdHVyZUNlbHNpdXMocmVzcG9uc2UpKTtcbiAgfSlcbiAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG4gICAgY29uc29sZS5sb2cocmVzcG9uc2UpO1xuICB9KTtcbiJdLCJuYW1lcyI6WyJBUElSZXF1ZXN0IiwiYXN5bmMiLCJjaXR5IiwicmVzcG9uc2UiLCJmZXRjaCIsImpzb24iLCJmaWx0ZXJEYXRhIiwiZ2V0VGVtcGVyYXR1cmUiLCJkYXRhIiwibWFpbiIsInRlbXAiLCJnZXRUZW1wZXJhdHVyZUZhaHJlbmhlaXQiLCJmYWhyZW5oZWl0IiwiTWF0aCIsInJvdW5kIiwiZ2V0VGVtcGVyYXR1cmVDZWxzaXVzIiwiY2Vsc2l1cyIsImdldFdlYXRoZXJNYWluIiwid2VhdGhlciIsImdldFdlYXRoZXJEZXNjcmlwdGlvbiIsImRlc2NyaXB0aW9uIiwiZ2V0V2VhdGhlckljb25Db2RlIiwiaWNvbiIsInRoZW4iLCJjb25zb2xlIiwibG9nIiwiaW1nIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic3JjIiwicXVlcnlTZWxlY3RvciIsImFwcGVuZENoaWxkIl0sInNvdXJjZVJvb3QiOiIifQ==